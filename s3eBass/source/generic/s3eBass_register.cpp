/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "s3eBass_autodefs.h"
#include "s3eEdk.h"
#include "s3eBass.h"
//Declarations of Init and Term functions
extern s3eResult s3eBassInit();
extern void s3eBassTerminate();


void s3eBassRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[94];
    funcPtrs[0] = (void*)s3eBASS_SetConfig;
    funcPtrs[1] = (void*)s3eBASS_GetConfig;
    funcPtrs[2] = (void*)s3eBASS_SetConfigPtr;
    funcPtrs[3] = (void*)s3eBASS_GetConfigPtr;
    funcPtrs[4] = (void*)s3eBASS_GetVersion;
    funcPtrs[5] = (void*)s3eBASS_ErrorGetCode;
    funcPtrs[6] = (void*)s3eBASS_GetDeviceInfo;
    funcPtrs[7] = (void*)s3eBASS_Init;
    funcPtrs[8] = (void*)s3eBASS_SetDevice;
    funcPtrs[9] = (void*)s3eBASS_GetDevice;
    funcPtrs[10] = (void*)s3eBASS_Free;
    funcPtrs[11] = (void*)s3eBASS_GetInfo;
    funcPtrs[12] = (void*)s3eBASS_Update;
    funcPtrs[13] = (void*)s3eBASS_GetCPU;
    funcPtrs[14] = (void*)s3eBASS_Start;
    funcPtrs[15] = (void*)s3eBASS_Stop;
    funcPtrs[16] = (void*)s3eBASS_Pause;
    funcPtrs[17] = (void*)s3eBASS_SetVolume;
    funcPtrs[18] = (void*)s3eBASS_GetVolume;
    funcPtrs[19] = (void*)s3eBASS_PluginLoad;
    funcPtrs[20] = (void*)s3eBASS_PluginFree;
    funcPtrs[21] = (void*)*s3eBASS_PluginGetInfo;
    funcPtrs[22] = (void*)s3eBASS_Set3DFactors;
    funcPtrs[23] = (void*)s3eBASS_Get3DFactors;
    funcPtrs[24] = (void*)s3eBASS_Set3DPosition;
    funcPtrs[25] = (void*)s3eBASS_Get3DPosition;
    funcPtrs[26] = (void*)s3eBASS_Apply3D;
    funcPtrs[27] = (void*)s3eBASS_MusicLoad;
    funcPtrs[28] = (void*)s3eBASS_MusicFree;
    funcPtrs[29] = (void*)s3eBASS_SampleLoad;
    funcPtrs[30] = (void*)s3eBASS_SampleCreate;
    funcPtrs[31] = (void*)s3eBASS_SampleFree;
    funcPtrs[32] = (void*)s3eBASS_SampleSetData;
    funcPtrs[33] = (void*)s3eBASS_SampleGetData;
    funcPtrs[34] = (void*)s3eBASS_SampleGetInfo;
    funcPtrs[35] = (void*)s3eBASS_SampleSetInfo;
    funcPtrs[36] = (void*)s3eBASS_SampleGetChannel;
    funcPtrs[37] = (void*)s3eBASS_SampleGetChannels;
    funcPtrs[38] = (void*)s3eBASS_SampleStop;
    funcPtrs[39] = (void*)s3eBASS_StreamCreate;
    funcPtrs[40] = (void*)s3eBASS_StreamCreateFile;
    funcPtrs[41] = (void*)s3eBASS_StreamCreateURL;
    funcPtrs[42] = (void*)s3eBASS_StreamCreateFileUser;
    funcPtrs[43] = (void*)s3eBASS_StreamFree;
    funcPtrs[44] = (void*)s3eBASS_StreamGetFilePosition;
    funcPtrs[45] = (void*)s3eBASS_StreamPutData;
    funcPtrs[46] = (void*)s3eBASS_StreamPutFileData;
    funcPtrs[47] = (void*)s3eBASS_RecordGetDeviceInfo;
    funcPtrs[48] = (void*)s3eBASS_RecordInit;
    funcPtrs[49] = (void*)s3eBASS_RecordSetDevice;
    funcPtrs[50] = (void*)s3eBASS_RecordGetDevice;
    funcPtrs[51] = (void*)s3eBASS_RecordFree;
    funcPtrs[52] = (void*)s3eBASS_RecordGetInfo;
    funcPtrs[53] = (void*)s3eBASS_RecordGetInputName;
    funcPtrs[54] = (void*)s3eBASS_RecordSetInput;
    funcPtrs[55] = (void*)s3eBASS_RecordGetInput;
    funcPtrs[56] = (void*)s3eBASS_RecordStart;
    funcPtrs[57] = (void*)s3eBASS_ChannelBytes2Seconds;
    funcPtrs[58] = (void*)s3eBASS_ChannelSeconds2Bytes;
    funcPtrs[59] = (void*)s3eBASS_ChannelGetDevice;
    funcPtrs[60] = (void*)s3eBASS_ChannelSetDevice;
    funcPtrs[61] = (void*)s3eBASS_ChannelIsActive;
    funcPtrs[62] = (void*)s3eBASS_ChannelGetInfo;
    funcPtrs[63] = (void*)s3eBASS_ChannelGetTags;
    funcPtrs[64] = (void*)s3eBASS_ChannelFlags;
    funcPtrs[65] = (void*)s3eBASS_ChannelUpdate;
    funcPtrs[66] = (void*)s3eBASS_ChannelLock;
    funcPtrs[67] = (void*)s3eBASS_ChannelPlay;
    funcPtrs[68] = (void*)s3eBASS_ChannelStop;
    funcPtrs[69] = (void*)s3eBASS_ChannelPause;
    funcPtrs[70] = (void*)s3eBASS_ChannelSetAttribute;
    funcPtrs[71] = (void*)s3eBASS_ChannelGetAttribute;
    funcPtrs[72] = (void*)s3eBASS_ChannelSlideAttribute;
    funcPtrs[73] = (void*)s3eBASS_ChannelIsSliding;
    funcPtrs[74] = (void*)s3eBASS_ChannelSet3DAttributes;
    funcPtrs[75] = (void*)s3eBASS_ChannelGet3DAttributes;
    funcPtrs[76] = (void*)s3eBASS_ChannelSet3DPosition;
    funcPtrs[77] = (void*)s3eBASS_ChannelGet3DPosition;
    funcPtrs[78] = (void*)s3eBASS_ChannelGetLength;
    funcPtrs[79] = (void*)s3eBASS_ChannelSetPosition;
    funcPtrs[80] = (void*)s3eBASS_ChannelGetPosition;
    funcPtrs[81] = (void*)s3eBASS_ChannelGetLevel;
    funcPtrs[82] = (void*)s3eBASS_ChannelGetData;
    funcPtrs[83] = (void*)s3eBASS_ChannelSetSync;
    funcPtrs[84] = (void*)s3eBASS_ChannelRemoveSync;
    funcPtrs[85] = (void*)s3eBASS_ChannelSetDSP;
    funcPtrs[86] = (void*)s3eBASS_ChannelRemoveDSP;
    funcPtrs[87] = (void*)s3eBASS_ChannelSetLink;
    funcPtrs[88] = (void*)s3eBASS_ChannelRemoveLink;
    funcPtrs[89] = (void*)s3eBASS_ChannelSetFX;
    funcPtrs[90] = (void*)s3eBASS_ChannelRemoveFX;
    funcPtrs[91] = (void*)s3eBASS_FXSetParameters;
    funcPtrs[92] = (void*)s3eBASS_FXGetParameters;
    funcPtrs[93] = (void*)s3eBASS_FXReset;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[94] = { 0 };

    /*
     * Register the extension
     */
    s3eEdkRegister("s3eBass", funcPtrs, sizeof(funcPtrs), flags, s3eBassInit, s3eBassTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int s3eBassStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&s3eBassRegisterExt;
    return 0;
}

int g_s3eBassVal = s3eBassStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    s3eBassRegisterExt();
}
#endif

#endif
